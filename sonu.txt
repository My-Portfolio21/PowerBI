import boto3

s3 = boto3.client('s3')
sns = boto3.client('sns')

def get_parent_folder(key):
    # Split the key into parts using the delimiter '/'
    key_parts = key.split('/')
    
    # The second-to-last part will be the parent folder
    parent_folder = key_parts[-2]
    
    return parent_folder

def lambda_handler(event, context):
    # Extract bucket and key from the S3 event
    bucket = event['Records'][0]['s3']['bucket']['name']
    key = event['Records'][0]['s3']['object']['key']
    
    # Extract the parent folder name
    parent_folder = get_parent_folder(key)
    
    # Get the sizes of parent folders
    folder_sizes = {'ac': 0, 'ecm': 0, 'edw': 0}
    # Calculate sizes here and update folder_sizes dictionary
    
    # Check if the size is outside the range
    if folder_sizes[parent_folder] < 100 or folder_sizes[parent_folder] > 200:
        sns.publish(
            TopicArn='YOUR_SNS_TOPIC_ARN',
            Subject=f'Folder Size Alert: {parent_folder}',
            Message=f'The size of {parent_folder} is not within the desired range.'
        )

    return {
        'statusCode': 200,
        'body': 'Lambda function executed successfully'
    }
