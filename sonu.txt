import boto3
import json

def lambda_handler(event, context):
    s3_client = boto3.client('s3')
    sns_client = boto3.client('sns')
    lambda_response = {
        "statusCode": 200,
        "body": json.dumps("Lambda function executed successfully.")
    }

    folder_thresholds = {
        'ac': 100 * 1024 * 1024,  # 100 MB in bytes
        'ecm': 200 * 1024 * 1024, # 200 MB in bytes
        'edw': 300 * 1024 * 1024  # 300 MB in bytes
    }

    folder_sizes = {
        'ac': 0,
        'ecm': 0,
        'edw': 0
    }

    for record in event['Records']:
        bucket_name = record['s3']['bucket']['name']
        object_key = record['s3']['object']['key']

        if object_key.startswith('raw/ac/tcoarchivewebtrackinglog'):
            folder_key = 'ac'
        elif object_key.startswith('raw/ecm/auth_employee'):
            folder_key = 'ecm'
        elif object_key.startswith('raw/edw/ecptrhst'):
            folder_key = 'edw'
        else:
            # Object is not in the specified subfolders
            continue

        # Get the object's size
        response = s3_client.head_object(Bucket=bucket_name, Key=object_key)
        object_size = response['ContentLength']

        # Update folder size
        folder_sizes[folder_key] += object_size

        # Check if size exceeds threshold
        if folder_sizes[folder_key] > folder_thresholds[folder_key]:
            sns_message = f"Maximum size breached for '{folder_key}'. Current size: {folder_sizes[folder_key]} bytes"
            sns_subject = f"Size Breach Alert - {folder_key}"
            sns_client.publish(
                TopicArn='YOUR_SNS_TOPIC_ARN',
                Message=sns_message,
                Subject=sns_subject
            )

        # Perform your desired actions here
        print(f"New file created: s3://{bucket_name}/{object_key}")
        print(f"Size of '{folder_key}': {folder_sizes[folder_key]} bytes")

        # You can put your processing logic here

    return lambda_response
