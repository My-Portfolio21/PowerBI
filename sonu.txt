import boto3
import os

s3 = boto3.client('s3')
sns = boto3.client('sns')

# Define the threshold sizes for each parent folder
threshold_sizes = {'ac': (100, 200), 'ecm': (150, 250), 'edw': (50, 150)}

def lambda_handler(event, context):
    # Extract bucket and key from the S3 event
    bucket = event['Records'][0]['s3']['bucket']['name']
    key = event['Records'][0]['s3']['object']['key']
    
    # Extract the subfolder name
    subfolder = os.path.dirname(key).split('/')[-1]
    
    # Get the parent folder
    parent_folder = os.path.dirname(key).split('/')[-2]
    
    # Get the sizes of parent folders
    folder_sizes = {'ac': 0, 'ecm': 0, 'edw': 0}
    # Calculate sizes here and update folder_sizes dictionary
    
    # Check if the size is outside the range
    min_threshold, max_threshold = threshold_sizes[parent_folder]
    if folder_sizes[parent_folder] < min_threshold or folder_sizes[parent_folder] > max_threshold:
        sns.publish(
            TopicArn='YOUR_SNS_TOPIC_ARN',
            Subject=f'Folder Size Alert: {parent_folder}',
            Message=f'The size of {parent_folder} is not within the desired range.'
        )

    return {
        'statusCode': 200,
        'body': 'Lambda function executed successfully'
    }
